<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hands & Hope Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="dashboard.css"> 
</head>
<body>

    <!-- Navigation Bar -->
    <nav>
        <div class="logo">Hands & Hope</div>
        <ul>
            <li><a href="/index">Home</a></li>
            <li><a href="/profile">Profile</a></li>
            <li><a href="/index#CONTACT">Contact Us</a></li>
        </ul>
        <div class="icon-cart">
            <i class="fa-solid fa-cart-shopping" id="cart-icon"></i>
        </div>
    </nav>

    <!-- Dashboard Container -->
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <h2>User Account</h2>
            <% if (user) { %>
                <h2>User Information</h2>
                <div class="user-info">
                    <p><strong>Name:</strong> <%= user.name %></p>
                    <p><strong>Email:</strong> <%= user.email %></p>
                    <p><strong>Picture:</strong></p>
                    <img src="<%= user.picture %>" alt="User Picture" style="border-radius: 50%; width: 100px; height: 100px;">
                </div>
            <% } else { %>
                <h2>Please log in to see your information.</h2>
            <% } %>
            <hr>
            <h2>Categories</h2>
            <a href="#">Handmade Crafts</a>
            <a href="#">Art Supplies</a>
            <a href="#">Home Decor</a>
            <a href="#">Gifts</a>
            <a href="#">Fashion Accessories</a>
        </aside>

        <!-- Main Content Area -->
        <section class="main-content">
            <h2>Product List</h2>
            <div class="shop">
                <div class="title">Our Handmade Products</div>
            </div>

            <!-- Product Listing -->
            <div class="listProduct">
                <div class="item">
                    <img src="images/pottery.jpg" alt="Handmade Pottery">
                    <h2>Handmade Pottery</h2>
                    <div class="price">$30.00</div>
                    <button class="addcart" data-id="1">Add to Cart</button>
                </div>

                <div class="item">
                    <img src="images/knitted.jpg" alt="Knitted Scarf">
                    <h2>Knitted Scarf</h2>
                    <div class="price">$25.00</div>
                    <button class="addcart" data-id="2">Add to Cart</button>
                </div>

                <div class="item" id="soap-set">
                    <img src="images/soap-set.jpg" alt="Artisan Soap Set">
                    <h2>Artisan Soap Set</h2>
                    <div class="price">$15.00</div>
                    <button class="addcart" data-id="3">Add to Cart</button>
                </div>

                <div class="item">
                    <img src="images/toy.jpg" alt="Wooden Toy">
                    <h2>Wooden Toy</h2>
                    <div class="price">$20.00</div>
                    <button class="addcart" data-id="4">Add to Cart</button>
                </div>
            </div>

            <!-- Push Notification Button -->
            <div class="notification-section">
                <button id="notify-button">Send Push Notification</button>
            </div>
        </section>
    </div>

    <!-- Cart Sidebar -->
    <div class="cartTab" id="cartTab">
        <h1>Shopping Cart</h1>
        <div class="listCart" id="cart-items">
            <!-- Cart items will be added dynamically here -->
        </div>
        <div class="btn">
            <button class="close" id="close-cart">Close</button>
            <button class="checkOut" id="checkout">Checkout</button>
        </div>
    </div>

    <!-- Checkout Modal -->
    <div class="checkout-summary">
        <h3>Checkout Summary</h3>
        <div id="summary-items"></div> <!-- Dynamic items will be injected here -->
        <div class="summary-item total">
            <span>Total</span>
            <span id="total-price">$0.00</span> <!-- Dynamic total price will be displayed here -->
        </div>
    </div>
    
    <button class="confirm-order-btn">Confirm Order</button>
    
    
    <button class="confirm-order-btn">Confirm Order</button>
    

    <script>
        
        // JavaScript for managing cart interactions
        document.addEventListener('DOMContentLoaded', function() {
            const cartIcon = document.getElementById('cart-icon');
            const cartTab = document.getElementById('cartTab');
            const closeCart = document.getElementById('close-cart');
            const cartItems = document.getElementById('cart-items');
            const checkout = document.getElementById('checkout');
            const checkoutModal = document.getElementById('checkoutModal');
            const closeModal = document.getElementById('close-modal');
            const checkoutSummary = document.getElementById('checkout-summary');
            const confirmOrder = document.getElementById('confirm-order');
            const notifyButton = document.getElementById('notify-button');
            let cart = [];

            // Open Cart
            cartIcon.addEventListener('click', () => {
                cartTab.classList.add('open');
            });

            // Close Cart
            closeCart.addEventListener('click', () => {
                cartTab.classList.remove('open');
            });

            // Add to cart functionality
            const addToCartButtons = document.querySelectorAll('.addcart');
            addToCartButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const productId = event.target.getAttribute('data-id');
                    const productName = event.target.previousElementSibling.previousElementSibling.textContent;
                    const productPrice = event.target.previousElementSibling.textContent;

                    const existingProduct = cart.find(item => item.id === productId);

                    if (existingProduct) {
                        existingProduct.quantity += 1;
                    } else {
                        cart.push({
                            id: productId,
                            name: productName,
                            price: productPrice,
                            quantity: 1
                        });
                    }

                    renderCartItems();
                });
            });

            // Render Cart Items
            function renderCartItems() {
                cartItems.innerHTML = '';

                cart.forEach(item => {
                    const cartItem = `
                        <div class="item">
                            <div class="image"><img src="images/${item.id}.jpg" alt="${item.name}"></div>
                            <div class="name">${item.name}</div>
                            <div class="totalPrice">${item.price}</div>
                            <div class="quantity">
                                <span class="minus" data-id="${item.id}">-</span>
                                <span>${item.quantity}</span>
                                <span class="plus" data-id="${item.id}">+</span>
                            </div>
                        </div>
                    `;
                    cartItems.innerHTML += cartItem;
                });

                addCartQuantityListeners();
            }

            // Add listeners for quantity change
            function addCartQuantityListeners() {
                const plusButtons = document.querySelectorAll('.plus');
                const minusButtons = document.querySelectorAll('.minus');

                plusButtons.forEach(button => {
                    button.addEventListener('click', (event) => {
                        const productId = event.target.getAttribute('data-id');
                        const product = cart.find(item => item.id === productId);
                        product.quantity += 1;
                        renderCartItems();
                    });
                });

                minusButtons.forEach(button => {
                    button.addEventListener('click', (event) => {
                        const productId = event.target.getAttribute('data-id');
                        const product = cart.find(item => item.id === productId);
                        if (product.quantity > 1) {
                            product.quantity -= 1;
                        } else {
                            cart = cart.filter(item => item.id !== productId);
                        }
                        renderCartItems();
                    });
                });
            }

            // Checkout Button Functionality
            checkout.addEventListener('click', () => {
                checkoutModal.style.display = 'block';
                renderCheckoutSummary();
            });

            closeModal.addEventListener('click', () => {
                checkoutModal.style.display = 'none';
            });

            confirmOrder.addEventListener('click', () => {
                alert('Order Confirmed! Thank you for your purchase.');
                cart = [];
                renderCartItems();
                checkoutModal.style.display = 'none';
            });

            // Render Checkout Summary
            function renderCheckoutSummary() {
                checkoutSummary.innerHTML = '';
                let totalAmount = 0;

                cart.forEach(item => {
                    const itemTotal = parseFloat(item.price.replace('$', '')) * item.quantity;
                    totalAmount += itemTotal;

                    const summaryItem = `
                        <p>${item.name} x ${item.quantity}: $${itemTotal.toFixed(2)}</p>
                    `;
                    checkoutSummary.innerHTML += summaryItem;
                });

                checkoutSummary.innerHTML += `<hr><h3>Total: $${totalAmount.toFixed(2)}</h3>`;
            }

            // Function to send push notification after payment initialization
function notifyUser(message) {
    if (!("Notification" in window)) {
        alert("This browser does not support desktop notifications");
        return;
    }

    if (Notification.permission === "granted") {
        new Notification(message);
    } else if (Notification.permission !== "denied") {
        Notification.requestPermission().then(permission => {
            if (permission === "granted") {
                new Notification(message);
            }
        });
    }
}

// Payment function
function pay() {
    var url = "https://tinypesa.com/api/v1/express/initialize";
    var amount = 1; // Set your amount here
    var msisdn = "0740408496"; // Customer's phone number
    var account_no = "200"; // Your account number

    fetch(url, {
        body: `amount=${amount}&msisdn=${msisdn}&account_no=${account_no}`,
        headers: {
            Apikey: "oLWbUS-ZGlu64s4PTZqYrKgwJEsIRzbaEa68TK2w",//temporal
            "Content-Type": "application/x-www-form-urlencoded",
        },
        method: "POST",
    })
    .then(response => {
        if (response.ok) {
            // On successful payment initialization
            notifyUser("Payment has been initialized successfully!");
        } else {
            // Handle errors from the payment API
            notifyUser("Failed to initialize payment. Please try again.");
        }
    })
    .catch(error => {
        console.error('Error:', error);
        notifyUser("An error occurred during the payment process.");
    });
}

// Add event listener for the notify button to trigger payment
notifyButton.addEventListener('click', pay);

        });
    </script>
</body>
</html>
